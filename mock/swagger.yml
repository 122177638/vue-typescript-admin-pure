openapi: 3.0.0
info:
  description: Mock API for vue-typescript-admin-pure.
  version: 1.0.0
  title: Mock API
  contact:
    email: 122177638@qq.com
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
servers:
  - url: /mock-api/v1
tags:
  - name: users
    description: Users related api.
paths:
  /users/login:
    post:
      tags:
        - users
      summary: 用户登录
      description: 使用用户名和密码登录
      operationId: login
      parameters:
        - name: username
          in: query
          required: true
          description: The user name for login.
          schema:
            $ref: '#/components/schemas/User/properties/username'
        - name: password
          in: query
          required: true
          description: The password for login in clear text.
          schema:
            $ref: '#/components/schemas/User/properties/password'
      responses:
        '200':
          description: OK
          headers:
            X-Rate-Limit:
              schema:
                type: integer
                format: int32
              description: calls per hour allowed by the user.
            X-Expires-After:
              schema:
                type: string
                format: date-time
              description: date in UTC when token expires.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  data:
                    type: object
                    properties:
                      accessToken:
                        type: string
                        example: admin-token
        '400':
          $ref: '#/components/responses/InvalidUser'
  /users/logout:
    post:
      tags:
        - users
      summary: 退出登录
      description: 清除当前session
      operationId: logout
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
  /users/info:
    post:
      tags:
        - users
      summary: 获取用户信息
      description: 获取当前登录用户信息
      operationId: getUserInfo
      security:
        - AccessTokenAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/Unauthorized'
components:
  securitySchemes:
    AccessTokenAuth:
      type: apiKey
      in: header
      name: X-Access-Token
  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InvalidUser:
      description: Invalid username supplied
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    Error:
      type: object
      properties:
        success:
          type: boolean
        error:
          type: object
      required:
        - success
        - error
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
          example: Armour
        password:
          type: string
          example: 12345678
        name:
          type: string
          example: Chong Guo
        email:
          type: string
          example: armourcy@gmail.com
        phone:
          type: string
          example: 18888888888
        avatar:
          type: string
          format: url
        introduction:
          type: string
          example: Always Sunshine
      required:
        - id
        - username
        - password
